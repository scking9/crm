<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shsxt.crm.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.shsxt.crm.vo.User">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_pwd" jdbcType="VARCHAR" property="userPwd" />
    <result column="true_name" jdbcType="VARCHAR" property="trueName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="is_valid" jdbcType="INTEGER" property="isValid" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <insert id="insert" parameterType="com.shsxt.crm.vo.User">
    insert into t_user (id, user_name, user_pwd, 
      true_name, email, phone, 
      is_valid, create_date, update_date
      )
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPwd,jdbcType=VARCHAR}, 
      #{trueName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{isValid,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.shsxt.crm.vo.User">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPwd != null">
        user_pwd,
      </if>
      <if test="trueName != null">
        true_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="isValid != null">
        is_valid,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null">
        #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="trueName != null">
        #{trueName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null">
        #{isValid,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <sql id="Base_Column_List">
    id, user_name, user_pwd,email,phone,is_valid,create_date,update_date,true_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where id = #{userId,jdbcType=INTEGER}
  </delete>
  <update id="updateByPrimaryKeySelective" parameterType="com.shsxt.crm.vo.User">
    update t_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="trueName != null">
        true_name = #{trueName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate},
      </if>

    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shsxt.crm.vo.User">
    update t_user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_pwd = #{userPwd,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <!-- 通过用户名查询用户对象 -->
  <select id="queryUserByName" parameterType="string" resultType="com.shsxt.crm.vo.User">
    select
        *
    from
        t_user
    where
        user_name = #{userName}
  </select>

  <!-- 通过用户ID修改用户密码 -->
  <update id="updateUserPwd">
    update
        t_user
    set
        user_pwd = #{userPwd}, update_date=now()
    where
        id = #{userId}
  </update>


  <!-- 查询所有的销售人员 -->
  <select id="queryAllSales" resultType="java.util.Map">
    SELECT
        u.id,
        u.user_name as userName
    FROM
        t_user u
        INNER JOIN t_user_role ur ON u.id = ur.user_id
        INNER JOIN t_role r ON ur.role_id = r.id
    WHERE
        u.is_valid = 1
        and r.is_valid = 1
        and role_name = '销售'
  </select>


  <!-- 条件查询用户列表 -->
  <select id="selectByParams" resultType="com.shsxt.crm.vo.User">
    select
        <include refid="Base_Column_List"/>
    from
        t_user
        <where>
          is_valid = 1
          <if test="null != userName and userName != ''">
            and user_name like concat('%',#{userName},'%')
          </if>
          <if test="null != email and email != ''">
            and email like concat('%',#{email},'%')
          </if>
          <if test="null != phone and phone != ''">
            and phone like concat('%',#{phone},'%')
          </if>
        </where>
  </select>


  <!-- 批量删除 -->
  <update id="deleteBatch">
    update
        t_user
    set
        is_valid = 0, update_date=now()
    where
        id
    in
        <foreach collection="array" item="id" open="(" close=")" separator=",">
          ${id}
        </foreach>

  </update>

  <!-- 添加用户，返回主键 -->
  <insert id="insertHasKey" parameterType="com.shsxt.crm.vo.User" useGeneratedKeys="true" keyProperty="id">
     insert into t_user ( user_name, user_pwd,
      true_name, email, phone,
      is_valid, create_date, update_date
      )
    values (#{userName,jdbcType=VARCHAR}, #{userPwd,jdbcType=VARCHAR},
      #{trueName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
      #{isValid,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}
      )

  </insert>

</mapper>