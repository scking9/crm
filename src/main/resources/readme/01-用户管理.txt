========== 一、用户登录 ==========
前台：
    表单提交数据，请求方式设置为POST，表单元素为用户名称和用户密码

后台：
    整体思路：
        1. 接收参数 （用户名、用户密码）
        2. 参数校验 （非空校验）
        3. 通过用户名查询用户对象，返回用户对象
        4. 判断用户对象是否存在 （不存在，则失败）
        5. 比较前台传递的用户密码与数据库中查询到用户对象的用户密码 （密码不相等，则失败）
        6. 登录成功

    Controller层：
        1. 通过形参接收请求参数
        2. 调用Service层的方法，得到登录结果 （通过try catch捕获service层的异常）
        3. 响应结果给客户端 （返回resultInfo）

    Service层：
        1. 参数校验 （非空校验）
            通过工具类 AssertUtil 判断参数是否满足需求。
            如果用户名或密码为空，则通过isTrue方法抛出异常。
        2. 调用Dao层，通过用户名查询用户对象，返回用户对象
        3. 判断用户对象是否存在
            不存在，则抛出异常
        4. 比较前台传递的用户密码与数据库中查询到用户对象的用户密码
            不相等，则抛出异常

    Dao层：
        通过用户名查询用户对象，返回用户对象





========== 二、修改密码 ==========
整体思路：
    1. 接收参数 （原始密码、新密码、重复密码）
    2. 参数校验
        1. 参数非空
        2. 原密码是否正确（是否和数据库中的密码一致）
        3. 新密码和原始密码是否一致 （新密码不能原始密码一致）
        4. 重复密码和新密码是否一致 （新密码和重复需要一样）
    3. 修改密码

Controller层：
    1. 通过形参接收参数
    2. 从cookie中获取当前登录用户的ID
    2. 调用Service层的更新方法（通过try catch捕获异常）
    3. 返回resultInfo对象

Service层：
    1. 调用Dao层，通过用户ID得到用户对象
    2. 判断用户对象是否存在
    3. 原始密码是否为空
    4. 原始密码是否与数据库中的用户对象的密码一致
    5. 新密码是否为空
    6. 新密码是否不与原始密码一致
    7. 重复密码是否为空
    8. 重复密码是否与新密码一致
    9. 通过用户ID更新用户密码，判断受影响的行数

Dao层：
    不需要写


